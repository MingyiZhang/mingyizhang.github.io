<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on myz&#39;Frag</title>
    <link>https://mingyizhang.dev/post/</link>
    <description>Recent content in Posts on myz&#39;Frag</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mingyizhang.dev/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Kotlin suspend function in Java</title>
      <link>https://mingyizhang.dev/post/20230723_kotlin-suspend-to-non-blocking/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mingyizhang.dev/post/20230723_kotlin-suspend-to-non-blocking/</guid>
      <description>To use Kotlin suspend function in Java, we need to convert it to a non-blocking function. The following code snippet shows how to do it.
fun &amp;lt;T&amp;gt; suspendToFuture( executor: Executor, block: suspend () -&amp;gt; T, ): CompletableFuture&amp;lt;T&amp;gt; { val future = CompletableFuture&amp;lt;T&amp;gt;() val dispatcher = executor.asCoroutineDispatcher() CoroutineScope(dispatcher + SupervisorJob()).launch { try { future.complete(block()) } catch (e: Exception) { future.completeExceptionally(e) } } return future } Suppose we have a suspend function:</description>
    </item>
    
  </channel>
</rss>
